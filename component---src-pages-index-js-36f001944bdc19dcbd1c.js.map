{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["Image","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","avatar","childImageSharp","_4148890524","IndexPage","layout","Helmet_default","href","rel","seo","title","keywords","style","maxWidth","margin","components_image","icon","type","theme","marginTop","tooltip","placement","fontSize","es_button","size","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","Layout","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","padding","paddingTop","Date","getFullYear","target","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-36f001944bdc19dcbd1c.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        avatar: file(relativePath: { eq: \"jacob_herper.jpg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.avatar.childImageSharp.fluid} />}\n  />\n)\nexport default Image\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { Icon, Button, Tooltip } from \"antd\"\nimport \"antd/dist/antd.css\"\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <Helmet>\n      <link\n        href=\"https://unpkg.com/ionicons@4.2.2/dist/css/ionicons.min.css\"\n        rel=\"stylesheet\"\n      />\n    </Helmet>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n\n    <div style={{ maxWidth: `300px`, margin: `2rem auto 1.45rem` }}>\n      <Image />\n    </div>\n    <h1>Jacob Herper</h1>\n    <p>Front End Web Developer</p>\n    <p>\n      <Icon type=\"environment\" theme=\"filled\" /> London, UK\n    </p>\n\n    <div style={{ marginTop: `2rem` }}>\n      <a\n        href=\"https://www.linkedin.com/in/jacobherper/\"\n        style={{ margin: `0 0.5rem` }}\n      >\n        <Tooltip placement=\"top\" title=\"Find me on LinkedIn\">\n          <Icon type=\"linkedin\" theme=\"filled\" style={{ fontSize: 48 }} />\n        </Tooltip>\n      </a>\n      <a href=\"https://github.com/jakeherp\" style={{ margin: `0 0.5rem` }}>\n        <Tooltip placement=\"top\" title=\"See what I built on Github\">\n          <Icon type=\"github\" theme=\"filled\" style={{ fontSize: 48 }} />\n        </Tooltip>\n      </a>\n      <a href=\"https://behance.net/jakeherp\" style={{ margin: `0 0.5rem` }}>\n        <Tooltip placement=\"top\" title=\"See what I built on Behance\">\n          <Icon type=\"behance-square\" theme=\"filled\" style={{ fontSize: 48 }} />\n        </Tooltip>\n      </a>\n      <a href=\"https://instagram.com/jakeherp\" style={{ margin: `0 0.5rem` }}>\n        <Tooltip placement=\"top\" title=\"Follow me on Instagram\">\n          <Icon type=\"instagram\" theme=\"filled\" style={{ fontSize: 48 }} />\n        </Tooltip>\n      </a>\n    </div>\n    <div style={{ marginTop: `1rem` }}>\n      <Button href=\"https://herper.io/contact/\" size=\"large\">\n        Get in touch\n      </Button>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer style={{ margin: `3rem 0 2rem` }}>\n            © {new Date().getFullYear()}{\" \"}\n            <a href=\"https://herper.io/\">Jacob Herper</a> - Proudly built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org/\" target=\"_blank\">\n              Gatsby\n            </a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`JakeHerp - Front End Developer`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}